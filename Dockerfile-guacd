ARG GUACD_BASE_IMAGE=1.5.5
FROM guacamole/guacd:${GUACD_BASE_IMAGE} AS builder

USER root

# Install build dependencies
RUN apk add --no-cache \
        git            \
        grep           \
        autoconf       \
        automake       \
        make           \
        build-base     \
        cmake          \
        pkgconfig      \
        libtool        \
        alpine-sdk     \
        libpng-dev     \
        jpeg-dev       \
        cairo-dev      \
        freerdp-dev    \
        libogg-dev     \
        libvorbis-dev  \
        libwebp-dev    \
        cunit-dev      \
        pango-dev      \
        pulseaudio-dev \
        util-linux-dev

# Copy source to container for sake of build
ARG BUILD_DIR=/tmp/guacamole-nebulardp
COPY . ${BUILD_DIR}

#
# Base directory for installed guacamole build artifacts.
#
ARG GUACAMOLE_DIR=/opt/guacamole

#
# Base directory for installed guacamole-nebulardp build artifacts.
#
ARG PREFIX_DIR=/tmp/guacamole-nebulardp-build

#
# Build ssh library dependencies
#
ARG WITH_LIBSSH2='libssh2-\d+(\.\d+)+'
ARG WITH_LIBTELNET='\d+(\.\d+)+'

ARG LIBSSH2_OPTS="\
    -DBUILD_EXAMPLES=OFF \
    -DBUILD_SHARED_LIBS=ON"

ARG LIBTELNET_OPTS="\
    --disable-static \
    --disable-util"

# Build guacamole-server and its core protocol library dependencies
RUN chmod +x ${BUILD_DIR}/src/guacd-docker/bin/build-protocol.sh
RUN ${BUILD_DIR}/src/guacd-docker/bin/build-protocol.sh


















# Use same Alpine version as the base for the runtime image
FROM guacamole/guacd:${GUACD_BASE_IMAGE}

#
# Base directory for installed build artifacts. See also the
# CMD directive at the end of this build stage.
#
# NOTE: Due to limitations of the Docker image build process, this value is
# duplicated in an ARG in the first stage of the build.
#
ARG PREFIX_DIR=/tmp/guacamole-nebulardp-build
ARG GUACAMOLE_DIR=/opt/guacamole

# Run with user root
USER root

# Copy build artifacts into this stage
COPY --from=builder ${PREFIX_DIR} ${GUACAMOLE_DIR}

# Install build dependencies
RUN apk add --no-cache \
        nebula

# Fixing permissions
RUN chown root /usr/sbin/nebula

# Copy binaries
COPY ./bin/guacd/* /sbin/

# Copy nebula configuration files
COPY ./config/nebula/common/* /etc/nebula/
COPY ./config/nebula/guacd/* /etc/nebula/